@page "/register"
@inject IAuthService  AuthService
@inject NavigationManager NavigationManager

        <div class="container invest_card" style="margin-top: 10rem">
            @if (withErrors)
            {
                <div class="alert alert-danger" role="alert">
                    @foreach (var error in errors)
                    {
                        <p>@error</p>
                    }
                </div>
            }
            <h6 class="card-title text-center">Регистрация</h6>
            <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
                <DataAnnotationsValidator />
                <ValidationSummary />

                <div class="row mb-4">
                    <div class="col offset-md-3 col-md-6">
                        <InputText Id="email" class="form-control" placeholder="введите email" @bind-Value="registerModel.Email" />
                        <ValidationMessage For="@(() => registerModel.Email)" />
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col offset-md-3 col-md-6">
                        <InputText Id="password" type="password" class="form-control" placeholder="введите пароль" @bind-Value="registerModel.Password" />
                        <ValidationMessage For="@(() => registerModel.Password)" />
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col offset-md-3 col-md-6">
                        <InputText Id="password" type="password" class="form-control" placeholder="повторите пароль" @bind-Value="registerModel.PasswordConfirm" />
                        <ValidationMessage For="@(() => registerModel.PasswordConfirm)" />
                    </div>
                </div>

                <div class="row mb-4">
                    <div class="col offset-md-3 col-md-6">
                        <button type="submit" class="btn btn-outline-danger w-100">Зарегистрироваться</button>
                    </div>
                </div>

            </EditForm>
        </div>
    @code {
        RegisterModel registerModel = new RegisterModel();
        bool withErrors;
        IEnumerable<string> errors;

        async Task HandleRegistration()
        {
            withErrors = false;
            var result = await AuthService.RegisterAsync(registerModel);

            if (result.Successful)
                NavigationManager.NavigateTo("/login");
            else
            {
                errors = result.Errors;
                withErrors = true;
            }
        }
    }
