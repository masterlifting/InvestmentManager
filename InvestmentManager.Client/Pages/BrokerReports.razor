@page "/brokerreports"
@inject ILocalStorageService localStorage
@inject CustomNotification notice
@attribute [Authorize]

@if (model.Errors.Any())
{
    <ReportErrors Errors="@model.Errors" />
}
else if (model.Reports.Any())
{
    <ReportSuccessed Reports="@model.Reports" />
}
else
{
    <RowTitle Position="AlignType.Center" Color="ColorBootstrap.primary" Text="Out new data."/>
}


@code
{
    BrokerReportModel model = new BrokerReportModel();
    [CascadingParameter] Task<AuthenticationState> AuthenticationState { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationState).User;
        model = await localStorage.GetItemAsync<BrokerReportModel>($"{user.Identity.Name}_{DefaultString.Id.brokerReport}");

        notice.LoadStop();
        notice.ToastSuccess("Parsing bcs reports", "Success");
    }
}