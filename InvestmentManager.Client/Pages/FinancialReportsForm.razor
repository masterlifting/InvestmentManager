@page "/financialreportsform"
@inject CustomHttpClient httpClient
@inject Notification notice


@foreach (var result in newReports)
{
    <div class="container idark iframe">
        <RowTitle Color="Choice.Color.warning" Text="@result.CompanyName" />

        @foreach (var report in result.Reports)
        {
            <EditForm class="icontent small text-nowrap" Model="@report" OnValidSubmit="@(() => SaveReport(report, result.CompanyName))">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="row ">
                    <span class="col-6">Дата</span>
                    <div class="col-6">
                        <InputDate @bind-Value="@report.DateReport" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Всего акций</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Колличество акций должно быть числом" @bind-Value="@report.StockVolume" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Дивиденды</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Дивиденды должны быть числом" @bind-Value="@report.Dividend" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Выручка</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Выручка должна быть числом" @bind-Value="@report.Revenue" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Валовая прибыль</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Валовая прибыль должна быть числом" @bind-Value="@report.GrossProfit" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Чистая прибыль</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Чистая прибыль должна быть числом" @bind-Value="@report.NetProfit" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Денежный поток</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Денежный поток должен быть числом" @bind-Value="@report.CashFlow" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Активы</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Активы должны быть числом" @bind-Value="@report.Assets" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Акционерный капитал</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Капитал должен быть числом" @bind-Value="@report.ShareCapital" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Оборот</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Оборот должен быть числом" @bind-Value="@report.Turnover" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Задолженность</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Задолженность должна быть числом" @bind-Value="@report.LongTermDebt" />
                    </div>
                </div>
                <div class="row">
                    <span class="col-6">Обязательства</span>
                    <div class="col-6">
                        <InputNumber ParsingErrorMessage="Обязательства должны быть числом" @bind-Value="@report.Obligation" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-6">
                        <ButtonAction Title="Удалить" Color="Choice.Button.danger" ClickAction="@(() => DeleteReport(report, result.CompanyName))" />
                    </div>
                    <div class="col-6">
                        <ButtonSubmit Title="Сохранить" Color="Choice.Button.success" />
                    </div>
                </div>
            </EditForm>
        }
    </div>
}

@code {
    List<NewCompanyReportModel> newReports = new List<NewCompanyReportModel>();

    protected override async Task OnParametersSetAsync() => newReports = await httpClient.GetResultAsync<List<NewCompanyReportModel>>("admin/getreports");

    async Task DeleteReport(NewReportModel report, string companyName)
    {
        if (await httpClient.PostBoolAsync("admin/deletereport", report.ReportId))
        {
            await DeleteReportNodeAsync(report, companyName);
            await notice.NoticeFailedAsync("Отчет удален", 700);
        }
        else
            await notice.NoticeFailedAsync();
    }
    async Task SaveReport(NewReportModel report, string companyName)
    {
        if (await httpClient.PostBoolAsync<NewReportModel>("admin/savereport", report))
        {
            await DeleteReportNodeAsync(report, companyName);
            await notice.NoticeSuccesAsync("Отчет сохранен", 700);
        }
        else
            await notice.NoticeFailedAsync();
    }
    async Task DeleteReportNodeAsync(NewReportModel report, string companyName) =>
        await Task.Run(() => { newReports.FirstOrDefault(x => x.CompanyName.Equals(companyName)).Reports.Remove(report); });
}
