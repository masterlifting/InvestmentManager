@inject CustomHttpClient http
@inject CustomNotification notice
@inject NavigationManager navigation

<FrameTemplate Theme="ColorCustom.idanger" Name="Administrator" TitleColor="ColorBootstrap.light">
    <InfoBlock>
        <MultiRow Name="Recalculate all" IconName="calculator" Action="RecalculateAll" />
        <MultiRow Name="Load prices" IconName="script" Action="ParsePrices" />
        <MultiRow Name="Load reports" IconName="document" Action="ParseReports" />
        <MultiRow Name="Check reports" IconName="check" Action="  CheckParsedReports" />
        <MultiRow Name="@addCompany" IconName="file" Action="     AddCompany" />
    </InfoBlock>
    <ActionBlock>
        @if (isAddingCompany)
        {
            <FormCompanyComplex InfoName="@addCompany" CompanyId="null" UpdateVisible="((bool isVisible) => isAddingCompany = isVisible)" />
        }
    </ActionBlock>
</FrameTemplate>

@code {
    string addCompany = "Add new company";
    bool isAddingCompany;

    [CascadingParameter] Task<AuthenticationState> AuthenticationState { get; set; }

    async Task RecalculateAll()
    {
        if (await IsAdmin())
        {
            var result = await http.GetAsync<BaseResult>(new UrlBuilder(UrlService.RecalculateAll).Result);

            if (result.IsSuccess)
                notice.ToastSuccess("Recalculating info", result.Info);
            else
                notice.ToastDanger("Recalculating info", result.Info);
        }
    }
    async Task ParsePrices()
    {
        if (await IsAdmin())
            await http.GetAsync(new UrlBuilder(UrlService.ParsePrices).Result);
    }
    async Task ParseReports()
    {
        if (await IsAdmin())
            await http.GetAsync(new UrlBuilder(UrlService.ParseReports).Result);
    }
    async Task CheckParsedReports()
    {
        if (await IsAdmin())
            navigation.NavigateTo("/companyreportforms");
    }
    async Task AddCompany()
    {
        if (await IsAdmin())
            isAddingCompany = !isAddingCompany;
    }
    async Task<bool> IsAdmin()
    {
        bool result = false;

        if ((await AuthenticationState).User.IsInRole("pestunov"))
            result = true;
        else
            await notice.AlertAccessAsync("You are not an admin!");

        return result;
    }
}
