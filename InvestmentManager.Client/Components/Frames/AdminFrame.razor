@inject CustomHttpClient http
@inject Notification notice
@inject NavigationManager navigation

<FrameTemplate Theme="Choice.InvestColor.idanger" Name="Administrator" TitleColor="Choice.TextColor.light">
    <InfoBlock>
        <MultiRow Name="Recalculate all" IconName="calculator" Action="RecalculateAll" />
        <MultiRow Name="Load prices" IconName="script" Action="GetNewPrice" />
        <MultiRow Name="Load reports" IconName="document" Action="ParseNewReports" />
        <MultiRow Name="Check reports" IconName="check" Action="CheckParsedReports" />
        <MultiRow Name="Add company" IconName="file" />
    </InfoBlock>
</FrameTemplate>

@code {

    [CascadingParameter] Task<AuthenticationState> AuthenticationState { get; set; }

    async Task RecalculateAll()
    {
        if (await IsAdmin())
            await http.GetVoidAsync(RouteName.admin + "/recalculateall", true);
    }
    async Task GetNewPrice()
    {
        if (await IsAdmin())
            await http.GetVoidAsync(RouteName.price + "/getnew");
    }
    async Task ParseNewReports()
    {
        if (await IsAdmin())
            await http.GetVoidAsync(RouteName.companyReport + "/parse");
    }
    async Task CheckParsedReports()
    {
        if (await IsAdmin())
            navigation.NavigateTo("/companyreportforms");
    }
    async Task<bool> IsAdmin()
    {
        bool result = false;

        if ((await AuthenticationState).User.IsInRole("pestunov"))
            result = true;
        else
            await notice.AlertAccessAsync("You are not an admin!");

        return result;
    }
}
