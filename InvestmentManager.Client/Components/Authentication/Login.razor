@page "/login"
@inject IAuthService AuthService
@inject NavigationManager NavigationManager

    <div class="row isecodary iframe" style="margin-top:30vh">
        <EditForm class="col-12" Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />
            @if (withErrors)
            {
                <div class="row validation-message">
                    <div class="col">@error</div>
                </div>
            }
            <div class="row">
                <div class="col">
                    <InputText type="email" placeholder="email" @bind-Value="loginModel.Email" />
                </div>
            </div>
            <div class="row my-2">
                <div class="col">
                    <InputText type="password" placeholder="password" @bind-Value="loginModel.Password" />
                </div>
            </div>

            <ButtonSubmit Title="To come in" Color="Choice.InvestColor.isuccess" />
        </EditForm>
    </div>

    @code {
        LoginModel loginModel = new LoginModel();
        bool withErrors;
        string error = "";

        async Task HandleLogin()
        {
            withErrors = false;

            var result = await AuthService.LoginAsync(loginModel);

            if (result.Successful)
                NavigationManager.NavigateTo("/");
            else
            {
                error = result.Error;
                withErrors = true;
            }
        }
    }
