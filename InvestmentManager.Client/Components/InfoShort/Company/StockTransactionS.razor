@inject QueryBaseService<SummaryStockTransaction> queryService

<InfoTemplate InfoName="@InfoName" VisibleAction="((bool isVisible) => UpdateVisible.InvokeAsync(isVisible))">
    <ChildContent>
        @if (model is not null)
        {
            <KeyValueCols Key="Last operation" Value="@model.DateTransaction.ToShortDateString()" />
            <KeyValueCols Key="Status" Value="@model.StatusName" />
            <KeyValueCols Key="Lot" Value="@model.Quantity.ToString()" />
            <KeyValueCols Key="Price" Value="@model.Cost.ToString("f2")" />

            <div class="col">
                <StockTransactionF CompanyId="CompanyId" />
            </div>
        }
        else
        {
            <span>@info</span>
        }
    </ChildContent>
</InfoTemplate>

@code{
    [CascadingParameter] Task<AuthenticationState> AuthenticationStateTask { get; set; }

    [Parameter] public EventCallback<bool> UpdateVisible { get; set; }
    [Parameter] public string InfoName { get; set; }
    [Parameter] public long CompanyId { get; set; }

    string info = DefaultString.loading;
    SummaryStockTransaction model;

    protected override async Task OnInitializedAsync()
    {
        var user = (await AuthenticationStateTask).User;
        string CustomUrlBuilder(long accountId) => new UrlBuilder(UrlController.StockTransactions, UrlPath.ByAccountId, accountId, UrlPath.ByCompanyId, CompanyId, UrlOption.Summary).Result;
        SummaryStockTransaction CustomResultBuilder(List<SummaryStockTransaction> models)
        {
            var targetData = models.OrderBy(x => x.DateTransaction).Last();

            return new SummaryStockTransaction
            {
                DateTransaction = targetData.DateTransaction,
                StatusName = targetData.StatusName,
                Cost = targetData.Cost,
                Quantity = targetData.Quantity
            };
        }

        var queryResult = await queryService.GetResultAsync(user, CustomUrlBuilder, CustomResultBuilder);

        model = queryResult.ResultContent;
        info = queryResult.ResultInfo;
    }
}