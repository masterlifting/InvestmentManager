@inject CustomHttpClient http

<InfoTemplate InfoName="@InfoName" VisibleAction="((bool isVisible) => UpdateVisible.InvokeAsync(isVisible))">
    <ChildContent>
        <KeyValueCols Key="Date update" Value="@dateUpdate" />
        <KeyValueCols Key="Date price" Value="@datePrice" />
        <KeyValueCols Key="Cost" Value="@lastPrice" />

        <div class="col">
            <PriceF CompanyId="CompanyId" />
        </div>

    </ChildContent>
</InfoTemplate>

@code{
    [Parameter] public EventCallback<bool> UpdateVisible { get; set; }
    [Parameter] public string InfoName { get; set; }
    [Parameter] public long CompanyId { get; set; }

    string dateUpdate = DefaultString.loading;
    string datePrice = DefaultString.loading;
    string lastPrice = DefaultString.loading;

    protected override async Task OnInitializedAsync()
    {
        var price = await http.GetAsync<PriceModel>(new UrlBuilder(UrlController.Prices, UrlPath.ByCompanyId, CompanyId, UrlOption.Last).Result);
        if (price != null)
        {
            dateUpdate = price.DateUpdate.ToString("g");
            datePrice = price.BidDate.ToString("g");
            lastPrice = price.Value.ToString("f3");
        }
    }
}