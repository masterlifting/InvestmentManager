@inject CustomHttpClient http

<BaseError Title="@Title" IsDone="@isDone" ErrorValue="@ErrorValue">
    <EditForm Model="@result" OnValidSubmit="SendData">
        <DataAnnotationsValidator />
        <ValidationMessage For="@(() => result.AccountName)" />
        <InputText @bind-Value="@result.AccountName" />
        <ButtonSubmit Title="Добавить" Color="Choice.InvestColor.iwarning" />
    </EditForm>
</BaseError>

@code {
    [Parameter] public string ErrorValue { get; set; }
    [Parameter] public string Title { get; set; }

    AccountErrorResultModel result;
    bool isDone = false;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();
        result = new AccountErrorResultModel { AccountName = ErrorValue.Split('\'')[1] };
    }

    async Task SendData() => isDone = await http.PostBoolAsync("error/accounterror", result, true);
}
