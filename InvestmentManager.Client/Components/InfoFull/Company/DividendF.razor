@inject CustomHttpClient http
@inject ILocalStorageService localStorage

<DetailTemplate Name="Dividend list" DetailTemplateAction="ShowInfo">
    <ChildContent>
        @if (items != null && items.Any())
        {
            <TableVertical TItem="DividendModel" DataItems="items" Columns="columns" />
        }
        else
        {
            <span>@info</span>
        }
    </ChildContent>
</DetailTemplate>

@code {
    [Parameter] public long CompanyId { get; set; }
    [CascadingParameter] Task<AuthenticationState> AuthenticationState { get; set; }

    string info = DefaultString.loading;

    List<DividendModel> items;
    List<ColumnConfig> columns;

    async Task ShowInfo(bool isDetails)
    {
        if (isDetails == true)
        {
            var user = (await AuthenticationState).User;

            if (await localStorage.ContainKeyAsync($"{user.Identity.Name}_{DefaultString.Id.accountId}"))
            {
                var accountIds = await localStorage.GetItemAsync<long[]>($"{user.Identity.Name}_{DefaultString.Id.accountId}");

                if (accountIds.Any())
                {
                    var result = new List<DividendModel>();

                    foreach (var accountId in accountIds)
                        result.AddRange(await http.GetAsync<List<DividendModel>>(new UrlBuilder(UrlController.Dividends, UrlPath.ByAccountId, accountId, UrlPath.ByCompanyId, CompanyId).Result));

                    if (result.Any())
                    {
                        items = result;

                        columns = new List<ColumnConfig>();
                        columns.AddRange(new ColumnConfig[]
                        {
                            new ColumnConfig{DataField = nameof(DividendModel.DateOperation), Caption = "Date", DataType = HtmlDataType.Date, Format = "d", AlignType = AlignType.Center},
                            new ColumnConfig{DataField = nameof(DividendModel.Amount), Caption = "Ammount", DataType = HtmlDataType.Number, Format = "f3", AlignType = AlignType.Center},
                        });
                    }
                    else
                        info = $"{DefaultString.outresult} dividends.";
                }
                else
                    info = DefaultString.accountDisabled;
            }
            else
                info = DefaultString.accountNotFound;
        }
    }
}
