@inject APIService<PriceModel> apiService

<DetailTemplate Name="Price list" DetailTemplateAction="ShowInfo">
    <ChildContent>
        @if (items is not null)
        {
            <TableVertical TItem="PriceModel" DataItems="items" Columns="columns" />
        }
        else
        {
            <span>@info</span>
        }
    </ChildContent>
</DetailTemplate>

@code {
    [Parameter] public long CompanyId { get; set; }
    string info = DefaultString.loading;

    List<PriceModel> items;
    List<ColumnConfig> columns;

    async Task ShowInfo(bool isDetails)
    {
        if (isDetails == true)
        {
            string CustomUriBuilder() => PriceAPI.GetUriByCompanyId(CompanyId);
            ColumnConfig[] CustomColumnBuilder() => new ColumnConfig[]
                {
                    new ColumnConfig{DataField = nameof(PriceModel.BidDate), Caption = "Date", DataType = HtmlDataType.Date, Format = "d", AlignType = AlignType.Center},
                    new ColumnConfig{DataField = nameof(PriceModel.Value), Caption = "Price", DataType = HtmlDataType.Number, Format = "#,#0.###", AlignType = AlignType.Center}
                };
            var queryResult = await apiService.GetResultsAsync(CustomUriBuilder, CustomColumnBuilder);

            columns = queryResult.Columns;
            items = queryResult.ViewResult.ResultContents;
            info = queryResult.ViewResult.ResultInfo;
        }
    }
}
