@inject Notification notice

@implements IDisposable

@if (notice.Notice.Visible)
{
    <div class="row fixed-top py-2 font-weight-bold iconvex @notice.Notice.ColorBg" style="height: 3em">
        <div class="col-10 align-self-center pl-5"> @notice.Notice.Message </div>
        <div class="col-2 text-center align-self-center">
            <span class="oi oi-bolt" aria-hidden="true"></span>
        </div>
    </div>
}
@if (notice.Info.Visible)
{
    <div class="container fixed-bottom">
        <div class="row py-2 iconvex @notice.Info.ColorBg irounded-top">
            <div class="col-1">
                <div class="row">
                    <div class="col text-center p-1">
                        <span class="oi oi-envelope-open" aria-hidden="true"></span>
                    </div>
                </div>
            </div>
            <div class="col-10">
                <div class="row py-1">
                    <div class="col font-weight-bold text-warning">@notice.Info.Title</div>
                </div>
                <div class="row py-1">
                    <div class="col ">
                        @notice.Info.Message
                    </div>
                </div>
            </div>
            <div class="col-1">
                <IconClose Action="HideInfo" />
            </div>
        </div>
    </div>
}
@if (notice.IsLoading)
{
    <div class="row fixed-top iconvex isecodary" style="height: 3em">
        <div class="col text-center align-self-center">
            <div class="spinner-border text-white" role="status">
                <span class="sr-only">Loading...</span>
            </div>
        </div>
    </div>
}


@code{
    protected override void OnInitialized() => notice.OnChange += StateHasChanged;
    public void Dispose() => notice.OnChange -= StateHasChanged;
    void HideInfo() => notice.Info.Visible = false;
}