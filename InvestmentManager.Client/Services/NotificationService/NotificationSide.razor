@inject CustomNotification notice
@implements IDisposable

@if (notice.Alert.Visible)
{
    <div class="row fixed-top py-2 font-weight-bold iconvex @notice.Alert.ColorBg" style="height: 3em">
        <div class="col-10 align-self-center pl-5"> @notice.Alert.Message </div>
        <div class="col-2 text-center align-self-center">
            <span class="oi oi-bolt" aria-hidden="true"></span>
        </div>
    </div>
}
@if (notice.Toast.Visible)
{
    <div class="container fixed-bottom">
        <div class="row py-2 iconvex @notice.Toast.ColorBg irounded-top">
            <div class="col-1">
                <div class="row">
                    <div class="col">
                        <span class="oi oi-envelope-open" aria-hidden="true"></span>
                    </div>
                </div>
            </div>
            <div class="col-10">
                <div class="row py-1">
                    <div class="col font-weight-bold text-warning">@notice.Toast.Title</div>
                </div>
                <div class="row py-1">
                    <div class="col ">
                        @notice.Toast.Message
                    </div>
                </div>
            </div>
            <div class="col-1 text-right">
                <IconClose Action="@(() => notice.Toast.Visible = false)" />
            </div>
        </div>
    </div>
}
@if (notice.IsLoading)
{
    <div class="row fixed-top" style="height: 3em">
        <div class="col text-center align-self-center">
            <div class="spinner-border text-white" role="status">
                <span class="sr-only"></span>
            </div>
        </div>
    </div>
}
@if (notice.Confirm.Visible)
{
    <div class="container fixed-bottom">
        <div class="row">
            <div class="offset-xl-4 col-xl-4 col  py-2 iconvex @notice.Confirm.ColorBg irounded-top">
                <div class="row mt-1 mb-4 justify-content-around">
                    <div class="col-5 ">
                        <ButtonAction Color="ColorCustom.idark" Title="No" ClickAction="(() => notice.Confirm.Visible = false)" />
                    </div>
                    <div class="col-5 ">
                        <ButtonAction Color="ColorCustom.isuccess" Title="Yes" ClickAction="(() => { notice.Confirm.Visible = false; notice.Confirm.Action?.Invoke(); })" />
                    </div>
                </div>
                <div class="row my-4">
                    <div class="col font-weight-bold text-warning text-center">@notice.Confirm.Title</div>
                </div>
            </div>
        </div>
    </div>
}

@code{
    protected override void OnInitialized() => notice.OnChange += StateHasChanged;
    public void Dispose() => notice.OnChange -= StateHasChanged;
}