@page "/sellrecommendation"
@inject HttpClient httpClient


<AuthorizeView>
    <Authorized>
        <LoadingInv IsLoading="@isLoading" />
        @if (Recommendations != null)
        {
            foreach (var r in Recommendations
                .OrderByDescending(x => x.IsRecommendMax)
                .ThenByDescending(x => x.IsRecommendMid)
                .ThenByDescending(x => x.IsRecommendMin)
                .ThenBy(x => (x.PriceMin - x.LastPriceValue)))
            {
                string lastPrice = r.CurrencyId == 2 ? r.LastPriceValue.ToString("C") : r.LastPriceValue.ToString("C", new CultureInfo("en-US"));

                <div class="container invest_card">
                    <TitleInv Color="ColorType.warning" Text="@r.CompanyName" />
                    @if (_companyId == r.CompanyId)
                    {
                        <StockTransactionDetail OnclickCallback="@CloseDetail" CompanyId="@r.CompanyId" />
                    }
                    else
                    {
                        <GetDetailInv OnclickCallback="GetDetail" Value="@r.CompanyId.ToString()" />
                        <InfoInv Name="Цена обновлена:" Value="@r.LastPriceDate" />
                        <InfoInv Color="ColorType.info" Name="Последняя цена:" Value="@lastPrice" />
                        @if (r.ValueMin != 0)
                        {
                            string price = r.CurrencyId == 2 ? r.PriceMin.ToString("C") : r.PriceMin.ToString("C", new CultureInfo("en-US"));
                            string view = $"{r.ValueMin} шт. по {price}";
                            ColorType colorType = r.IsRecommendMin ? ColorType.success : ColorType.danger;
                            <InfoInv Color="@colorType" Name="20% прибыль | Продать" Value="@view" />
                        }
                        @if (r.ValueMid != 0)
                        {
                            string price = r.CurrencyId == 2 ? r.PriceMid.ToString("C") : r.PriceMid.ToString("C", new CultureInfo("en-US"));
                            string view = $"{r.ValueMid} шт. по {price}";
                            ColorType colorType = r.IsRecommendMid ? ColorType.success : ColorType.danger;
                            <InfoInv Color="@colorType" Name="50% прибыль | Продать" Value="@view" />
                        }
                        @if (r.ValueMax != 0)
                        {
                            string price = r.CurrencyId == 2 ? r.PriceMax.ToString("C") : r.PriceMax.ToString("C", new CultureInfo("en-US"));
                            string view = $"{r.ValueMax} шт. по {price}";
                            ColorType colorType = r.IsRecommendMax ? ColorType.success : ColorType.danger;
                            <InfoInv Color="@colorType" Name="80% прибыль | Продать" Value="@view" />
                        }
                    }
                </div>
            }
        }
    </Authorized>
    <NotAuthorized>
        <AlertInv AlertType="@AlertType.warning"></AlertInv>
        <NotAuthorizeInfo>
        </NotAuthorizeInfo>
    </NotAuthorized>
</AuthorizeView>

@code {
    bool isLoading;
    long _companyId = 0;

    IEnumerable<SellRecommendationModel> Recommendations;
    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        Recommendations = await httpClient.GetFromJsonAsync<IEnumerable<SellRecommendationModel>>("recommendation/sellr");
        isLoading = false;
    }
    void GetDetail(string companyId)
    {
        _companyId = long.Parse(companyId);
    }
    void CloseDetail()
    {
        _companyId = 0;
    }

}
